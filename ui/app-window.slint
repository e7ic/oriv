import { Button, VerticalBox, HorizontalBox } from "std-widgets.slint";
import { TitleBar } from "components/title-bar.slint";

// 导入自定义字体
import "../assets/fonts/Kamerik105-Regular.otf";
import "../assets/fonts/Kamerik105-Bold.otf";

export component AppWindow inherits Window {
    icon: @image-url("../assets/app-icon.png");
    title: "ORIV";
    preferred-width: 1200px;
    preferred-height: 800px;
    min-width: 800px;
    min-height: 600px;
    // 注意：no-frame 现在通过 Rust 代码在非 macOS 平台设置
    background: transparent;
    default-font-family: "Kamerik 105";

    in-out property <int> counter: 42;
    callback request-increase-value();

    // 窗口控制回调
    callback minimize-window();
    callback maximize-window() -> bool;  // 返回是否最大化
    callback close-window();
    callback start-drag-window();  // 开始拖动窗口

    // 窗口状态
    in-out property <bool> is-maximized: false;

    // 平台检测
    in-out property <bool> is-macos: false;  // 由 Rust 代码设置

    // 主题相关
    in-out property <bool> dark-mode: false;
    callback toggle-theme();

    // 颜色定义
    property <color> bg-color: dark-mode ? #1e1e1e : white;
    property <color> titlebar-bg: dark-mode ? #2d2d2d : #f5f5f5;
    property <color> text-color: dark-mode ? #e0e0e0 : #333;
    property <color> icon-color: dark-mode ? #b0b0b0 : #666;
    property <color> button-hover-bg: dark-mode ? #3e3e3e : #e0e0e0;

    Rectangle {
        width: 100%;
        height: 100%;
        background: root.bg-color;
        // macOS 使用系统窗口圆角，其他平台在未最大化时使用自定义圆角
        border-radius: (root.is-macos || root.is-maximized) ? 0px : 16px;
        clip: true;

        VerticalBox {
            padding: 0px;
            spacing: 0px;
            width: 100%;

            // 自定义标题栏
            TitleBar {
                title: root.title;
                is-maximized <=> root.is-maximized;
                is-macos: root.is-macos;  // 传递平台信息
                dark-mode: root.dark-mode;
                titlebar-bg: root.titlebar-bg;
                text-color: root.text-color;
                icon-color: root.icon-color;
                button-hover-bg: root.button-hover-bg;

                minimize-clicked => {
                    root.minimize-window();
                }

                maximize-clicked => {
                    root.is-maximized = root.maximize-window();
                }

                close-clicked => {
                    root.close-window();
                }

                start-drag => {
                    root.start-drag-window();
                }
            }

            // 主内容区域
            Rectangle {
                background: root.bg-color;

                // 添加主题切换按钮（示例）
                Rectangle {
                    width: 120px;
                    height: 36px;
                    x: 20px;
                    y: 20px;
                    background: root.button-hover-bg;
                    border-radius: 8px;

                    TouchArea {
                        clicked => {
                            root.toggle-theme();
                        }
                    }

                    Text {
                        text: root.dark-mode ? "浅色模式" : "深色模式";
                        color: root.text-color;
                        font-size: 14px;
                        vertical-alignment: center;
                        horizontal-alignment: center;
                    }
                }
            }
        }
    }
}
